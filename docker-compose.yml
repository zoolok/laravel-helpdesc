version: "3.1"
services:
    redis:
        image: redis:alpine
        container_name: ${APP_NAME}-redis
        networks:
            - backend

    postgres:
        container_name: postgres_container
        image: postgres:13.3
        command:
            - "postgres"
            - "-c"
            - "max_connections=50"
            - "-c"
            - "shared_buffers=1GB"
            - "-c"
            - "effective_cache_size=4GB"
            - "-c"
            - "work_mem=16MB"
            - "-c"
            - "maintenance_work_mem=512MB"
            - "-c"
            - "random_page_cost=1.1"
            - "-c"
            - "temp_file_limit=10GB"
            - "-c"
            - "log_min_duration_statement=200ms"
            - "-c"
            - "idle_in_transaction_session_timeout=10s"
            - "-c"
            - "lock_timeout=1s"
            - "-c"
            - "statement_timeout=60s"
            - "-c"
            - "shared_preload_libraries=pg_stat_statements"
            - "-c"
            - "pg_stat_statements.max=10000"
            - "-c"
            - "pg_stat_statements.track=all"
        environment:
            POSTGRES_DB: "postgres"
            POSTGRES_USER: "admin"
            POSTGRES_PASSWORD: "admin"
            PGDATA: "/var/lib/postgresql/data/pgdata"
        volumes:
            - ../2. Init Database:/docker-entrypoint-initdb.d
            - .:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U admin -d HelpDesk"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '1'
                    memory: 4G
        networks:
            - backend

    postgres-test:
        env_file:
            - ".env.testing"
        container_name: postgres_test_container
        image: postgres:13.3
        command:
            - "postgres"
            - "-c"
            - "max_connections=50"
            - "-c"
            - "shared_buffers=1GB"
            - "-c"
            - "effective_cache_size=4GB"
            - "-c"
            - "work_mem=16MB"
            - "-c"
            - "maintenance_work_mem=512MB"
            - "-c"
            - "random_page_cost=1.1"
            - "-c"
            - "temp_file_limit=10GB"
            - "-c"
            - "log_min_duration_statement=200ms"
            - "-c"
            - "idle_in_transaction_session_timeout=10s"
            - "-c"
            - "lock_timeout=1s"
            - "-c"
            - "statement_timeout=60s"
            - "-c"
            - "shared_preload_libraries=pg_stat_statements"
            - "-c"
            - "pg_stat_statements.max=10000"
            - "-c"
            - "pg_stat_statements.track=all"
        environment:
            POSTGRES_DB: "postgres_test"
            POSTGRES_USER: "admin"
            POSTGRES_PASSWORD: "admin"
            PGDATA: "/var/lib/postgresql/data/pgdata_test"
        volumes:
            - ../2. Init Database:/docker-entrypoint-initdb.d
            - .:/var/lib/postgresql/data_test
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U admin -d HelpDesk"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '1'
                    memory: 4G
        networks:
            - backend

    pgadmin:
        container_name: pgadmin_container
        image: dpage/pgadmin4:5.7
        environment:
            PGADMIN_DEFAULT_EMAIL: "mityasazonow@yandex.ru"
            PGADMIN_DEFAULT_PASSWORD: "admin"
            PGADMIN_CONFIG_SERVER_MODE: "False"
        volumes:
            - ./pgadmin:/var/lib/pgadmin
        ports:
            - "5050:80"
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 1G
        networks:
            - backend

    webserver:
        image: nginx:alpine
        container_name: ${APP_NAME}-webserver
        working_dir: /application
        volumes:
            - ./:/application
            - ./docker/nginx:/etc/nginx/conf.d
        ports:
            - "80:80"
        networks:
            - backend

    php-fpm:
        build: docker/php-fpm
        container_name: ${APP_NAME}-php-fpm
        working_dir: /application
        volumes:
            - ./:/application
            - ./docker/php-fpm/php-ini-overrides.ini:/usr/local/etc/php/php.ini
        environment:
            XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9000 remote_port=9003 remote_enable=1 remote_autostart=1 idekey=PHPSTORM remote_connect_back=0 start_with_request=yes discover_client_host=1"
            PHP_IDE_CONFIG: serverName=Docker
            XDEBUG_SESSION: PHPSTORM
            XDEBUG_MODE: "develop,debug,trace"
        networks:
            - backend
        extra_hosts:
            - "host.docker.internal:host-gateway"
networks:
    backend:
        driver: bridge
